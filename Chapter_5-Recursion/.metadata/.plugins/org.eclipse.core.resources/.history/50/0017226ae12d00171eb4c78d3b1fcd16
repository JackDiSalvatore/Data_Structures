/*
 * chessBoard.cpp
 *
 *  Created on: Apr 30, 2017
 *      Author: jack
 */
#include <iostream>

using namespace std;

class ChessBoard {
public:
	ChessBoard();		// 8x8 chessboard
	ChessBoard(int);	// nxn chessboard

	void findSolutions();
private:
	const bool available;
	const int squares, norm;
	bool *column, *leftDiagonal, *rightDiagonal;
	int *positionInRow, howMany;

	void putQueen(int);
	void printBoard(ostream&);
	void initializeBoard();
};

ChessBoard::ChessBoard() :
		available(true), squares(8), norm(squares-1)
{
	initializeBoard();
}

ChessBoard::ChessBoard(int n) : available(true), squares(n), norm(squares-n) {
	initializeBoard();
}


int main() {
	cout << "Recursive chess board" << endl;
	return 0;
}
