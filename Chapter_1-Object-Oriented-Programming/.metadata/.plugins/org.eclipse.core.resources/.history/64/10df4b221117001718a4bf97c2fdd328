/*
 * main.cpp
 *
 *  Created on: Apr 1, 2017
 *      Author: jack
 */
#include <iostream>

using namespace std;

// const
//		- A compile time constraint that an object can not modified

int main(int argc, char* argv[]) {
	const int i = 9;
	// i = 6;  can't do this

	const int *p1 = &i;	// The data that is pointed to is const, pointer is not
	++p1;	// this is allowed
	//*p1 = 6; this is not

	int k = 10;
	int *const p2 = &k;	// pointer is const, data is not
	*p2 = 20;
	//p2 = &i; cant do this

	const int *const p3 = &i;	// data is const int, pointer is also const

	// Both of these are the same, "i" can't be modified
	int const *p4 = &i;		// pointer to int that is const
	const int *p5 = &i;		// Same, pointer to const int

	// If const is on the left of *, data is const
	// If const is on the right of *, pointer is const

	int j = 9;
	// say I really want to change i
	const_cast<int&>(i) = 6;
	cout << i << endl;

	int z = 7;
	z = 10;
	static_cast<const int&>(z);
	z = 12;
	// Don't use the cast, its a hacky way to stuff

	return 1;
}


